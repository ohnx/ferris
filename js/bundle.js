(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){"use strict";class Hooks{add(name,callback,first){if(typeof arguments[0]!="string"){for(let name in arguments[0]){this.add(name,arguments[0][name],arguments[1])}}else{(Array.isArray(name)?name:[name]).forEach(function(name){this[name]=this[name]||[];if(callback){this[name][first?"unshift":"push"](callback)}},this)}}run(name,env){this[name]=this[name]||[];this[name].forEach(function(callback){callback.call(env&&env.context?env.context:env,env)})}}class Plugins{constructor(jsep){this.jsep=jsep;this.registered={}}register(...plugins){plugins.forEach(plugin=>{if(typeof plugin!=="object"||!plugin.name||!plugin.init){throw new Error("Invalid JSEP plugin format")}if(this.registered[plugin.name]){return}plugin.init(this.jsep);this.registered[plugin.name]=plugin})}}class Jsep{static get version(){return"1.0.2"}static toString(){return"JavaScript Expression Parser (JSEP) v"+Jsep.version}static addUnaryOp(op_name){Jsep.max_unop_len=Math.max(op_name.length,Jsep.max_unop_len);Jsep.unary_ops[op_name]=1;return Jsep}static addBinaryOp(op_name,precedence,isRightAssociative){Jsep.max_binop_len=Math.max(op_name.length,Jsep.max_binop_len);Jsep.binary_ops[op_name]=precedence;if(isRightAssociative){Jsep.right_associative.add(op_name)}else{Jsep.right_associative.delete(op_name)}return Jsep}static addIdentifierChar(char){Jsep.additional_identifier_chars.add(char);return Jsep}static addLiteral(literal_name,literal_value){Jsep.literals[literal_name]=literal_value;return Jsep}static removeUnaryOp(op_name){delete Jsep.unary_ops[op_name];if(op_name.length===Jsep.max_unop_len){Jsep.max_unop_len=Jsep.getMaxKeyLen(Jsep.unary_ops)}return Jsep}static removeAllUnaryOps(){Jsep.unary_ops={};Jsep.max_unop_len=0;return Jsep}static removeIdentifierChar(char){Jsep.additional_identifier_chars.delete(char);return Jsep}static removeBinaryOp(op_name){delete Jsep.binary_ops[op_name];if(op_name.length===Jsep.max_binop_len){Jsep.max_binop_len=Jsep.getMaxKeyLen(Jsep.binary_ops)}Jsep.right_associative.delete(op_name);return Jsep}static removeAllBinaryOps(){Jsep.binary_ops={};Jsep.max_binop_len=0;return Jsep}static removeLiteral(literal_name){delete Jsep.literals[literal_name];return Jsep}static removeAllLiterals(){Jsep.literals={};return Jsep}get char(){return this.expr.charAt(this.index)}get code(){return this.expr.charCodeAt(this.index)}constructor(expr){this.expr=expr;this.index=0}static parse(expr){return new Jsep(expr).parse()}static getMaxKeyLen(obj){return Math.max(0,...Object.keys(obj).map(k=>k.length))}static isDecimalDigit(ch){return ch>=48&&ch<=57}static binaryPrecedence(op_val){return Jsep.binary_ops[op_val]||0}static isIdentifierStart(ch){return ch>=65&&ch<=90||ch>=97&&ch<=122||ch>=128&&!Jsep.binary_ops[String.fromCharCode(ch)]||Jsep.additional_identifier_chars.has(String.fromCharCode(ch))}static isIdentifierPart(ch){return Jsep.isIdentifierStart(ch)||Jsep.isDecimalDigit(ch)}throwError(message){const error=new Error(message+" at character "+this.index);error.index=this.index;error.description=message;throw error}runHook(name,node){if(Jsep.hooks[name]){const env={context:this,node:node};Jsep.hooks.run(name,env);return env.node}return node}searchHook(name){if(Jsep.hooks[name]){const env={context:this};Jsep.hooks[name].find(function(callback){callback.call(env.context,env);return env.node});return env.node}}gobbleSpaces(){let ch=this.code;while(ch===Jsep.SPACE_CODE||ch===Jsep.TAB_CODE||ch===Jsep.LF_CODE||ch===Jsep.CR_CODE){ch=this.expr.charCodeAt(++this.index)}this.runHook("gobble-spaces")}parse(){this.runHook("before-all");const nodes=this.gobbleExpressions();const node=nodes.length===1?nodes[0]:{type:Jsep.COMPOUND,body:nodes};return this.runHook("after-all",node)}gobbleExpressions(untilICode){let nodes=[],ch_i,node;while(this.index<this.expr.length){ch_i=this.code;if(ch_i===Jsep.SEMCOL_CODE||ch_i===Jsep.COMMA_CODE){this.index++}else{if(node=this.gobbleExpression()){nodes.push(node)}else if(this.index<this.expr.length){if(ch_i===untilICode){break}this.throwError('Unexpected "'+this.char+'"')}}}return nodes}gobbleExpression(){const node=this.searchHook("gobble-expression")||this.gobbleBinaryExpression();this.gobbleSpaces();return this.runHook("after-expression",node)}gobbleBinaryOp(){this.gobbleSpaces();let to_check=this.expr.substr(this.index,Jsep.max_binop_len);let tc_len=to_check.length;while(tc_len>0){if(Jsep.binary_ops.hasOwnProperty(to_check)&&(!Jsep.isIdentifierStart(this.code)||this.index+to_check.length<this.expr.length&&!Jsep.isIdentifierPart(this.expr.charCodeAt(this.index+to_check.length)))){this.index+=tc_len;return to_check}to_check=to_check.substr(0,--tc_len)}return false}gobbleBinaryExpression(){let node,biop,prec,stack,biop_info,left,right,i,cur_biop;left=this.gobbleToken();if(!left){return left}biop=this.gobbleBinaryOp();if(!biop){return left}biop_info={value:biop,prec:Jsep.binaryPrecedence(biop),right_a:Jsep.right_associative.has(biop)};right=this.gobbleToken();if(!right){this.throwError("Expected expression after "+biop)}stack=[left,biop_info,right];while(biop=this.gobbleBinaryOp()){prec=Jsep.binaryPrecedence(biop);if(prec===0){this.index-=biop.length;break}biop_info={value:biop,prec:prec,right_a:Jsep.right_associative.has(biop)};cur_biop=biop;const comparePrev=prev=>biop_info.right_a&&prev.right_a?prec>prev.prec:prec<=prev.prec;while(stack.length>2&&comparePrev(stack[stack.length-2])){right=stack.pop();biop=stack.pop().value;left=stack.pop();node={type:Jsep.BINARY_EXP,operator:biop,left:left,right:right};stack.push(node)}node=this.gobbleToken();if(!node){this.throwError("Expected expression after "+cur_biop)}stack.push(biop_info,node)}i=stack.length-1;node=stack[i];while(i>1){node={type:Jsep.BINARY_EXP,operator:stack[i-1].value,left:stack[i-2],right:node};i-=2}return node}gobbleToken(){let ch,to_check,tc_len,node;this.gobbleSpaces();node=this.searchHook("gobble-token");if(node){return this.runHook("after-token",node)}ch=this.code;if(Jsep.isDecimalDigit(ch)||ch===Jsep.PERIOD_CODE){return this.gobbleNumericLiteral()}if(ch===Jsep.SQUOTE_CODE||ch===Jsep.DQUOTE_CODE){node=this.gobbleStringLiteral()}else if(ch===Jsep.OBRACK_CODE){node=this.gobbleArray()}else{to_check=this.expr.substr(this.index,Jsep.max_unop_len);tc_len=to_check.length;while(tc_len>0){if(Jsep.unary_ops.hasOwnProperty(to_check)&&(!Jsep.isIdentifierStart(this.code)||this.index+to_check.length<this.expr.length&&!Jsep.isIdentifierPart(this.expr.charCodeAt(this.index+to_check.length)))){this.index+=tc_len;const argument=this.gobbleToken();if(!argument){this.throwError("missing unaryOp argument")}return this.runHook("after-token",{type:Jsep.UNARY_EXP,operator:to_check,argument:argument,prefix:true})}to_check=to_check.substr(0,--tc_len)}if(Jsep.isIdentifierStart(ch)){node=this.gobbleIdentifier();if(Jsep.literals.hasOwnProperty(node.name)){node={type:Jsep.LITERAL,value:Jsep.literals[node.name],raw:node.name}}else if(node.name===Jsep.this_str){node={type:Jsep.THIS_EXP}}}else if(ch===Jsep.OPAREN_CODE){node=this.gobbleGroup()}}if(!node){return this.runHook("after-token",false)}node=this.gobbleTokenProperty(node);return this.runHook("after-token",node)}gobbleTokenProperty(node){this.gobbleSpaces();let ch=this.code;while(ch===Jsep.PERIOD_CODE||ch===Jsep.OBRACK_CODE||ch===Jsep.OPAREN_CODE||ch===Jsep.QUMARK_CODE){let optional;if(ch===Jsep.QUMARK_CODE){if(this.expr.charCodeAt(this.index+1)!==Jsep.PERIOD_CODE){break}optional=true;this.index+=2;this.gobbleSpaces();ch=this.code}this.index++;if(ch===Jsep.OBRACK_CODE){node={type:Jsep.MEMBER_EXP,computed:true,object:node,property:this.gobbleExpression()};this.gobbleSpaces();ch=this.code;if(ch!==Jsep.CBRACK_CODE){this.throwError("Unclosed [")}this.index++}else if(ch===Jsep.OPAREN_CODE){node={type:Jsep.CALL_EXP,arguments:this.gobbleArguments(Jsep.CPAREN_CODE),callee:node}}else if(ch===Jsep.PERIOD_CODE||optional){if(optional){this.index--}this.gobbleSpaces();node={type:Jsep.MEMBER_EXP,computed:false,object:node,property:this.gobbleIdentifier()}}if(optional){node.optional=true}this.gobbleSpaces();ch=this.code}return node}gobbleNumericLiteral(){let number="",ch,chCode;while(Jsep.isDecimalDigit(this.code)){number+=this.expr.charAt(this.index++)}if(this.code===Jsep.PERIOD_CODE){number+=this.expr.charAt(this.index++);while(Jsep.isDecimalDigit(this.code)){number+=this.expr.charAt(this.index++)}}ch=this.char;if(ch==="e"||ch==="E"){number+=this.expr.charAt(this.index++);ch=this.char;if(ch==="+"||ch==="-"){number+=this.expr.charAt(this.index++)}while(Jsep.isDecimalDigit(this.code)){number+=this.expr.charAt(this.index++)}if(!Jsep.isDecimalDigit(this.expr.charCodeAt(this.index-1))){this.throwError("Expected exponent ("+number+this.char+")")}}chCode=this.code;if(Jsep.isIdentifierStart(chCode)){this.throwError("Variable names cannot start with a number ("+number+this.char+")")}else if(chCode===Jsep.PERIOD_CODE||number.length===1&&number.charCodeAt(0)===Jsep.PERIOD_CODE){this.throwError("Unexpected period")}return{type:Jsep.LITERAL,value:parseFloat(number),raw:number}}gobbleStringLiteral(){let str="";const startIndex=this.index;const quote=this.expr.charAt(this.index++);let closed=false;while(this.index<this.expr.length){let ch=this.expr.charAt(this.index++);if(ch===quote){closed=true;break}else if(ch==="\\"){ch=this.expr.charAt(this.index++);switch(ch){case"n":str+="\n";break;case"r":str+="\r";break;case"t":str+="\t";break;case"b":str+="\b";break;case"f":str+="\f";break;case"v":str+="\v";break;default:str+=ch}}else{str+=ch}}if(!closed){this.throwError('Unclosed quote after "'+str+'"')}return{type:Jsep.LITERAL,value:str,raw:this.expr.substring(startIndex,this.index)}}gobbleIdentifier(){let ch=this.code,start=this.index;if(Jsep.isIdentifierStart(ch)){this.index++}else{this.throwError("Unexpected "+this.char)}while(this.index<this.expr.length){ch=this.code;if(Jsep.isIdentifierPart(ch)){this.index++}else{break}}return{type:Jsep.IDENTIFIER,name:this.expr.slice(start,this.index)}}gobbleArguments(termination){const args=[];let closed=false;let separator_count=0;while(this.index<this.expr.length){this.gobbleSpaces();let ch_i=this.code;if(ch_i===termination){closed=true;this.index++;if(termination===Jsep.CPAREN_CODE&&separator_count&&separator_count>=args.length){this.throwError("Unexpected token "+String.fromCharCode(termination))}break}else if(ch_i===Jsep.COMMA_CODE){this.index++;separator_count++;if(separator_count!==args.length){if(termination===Jsep.CPAREN_CODE){this.throwError("Unexpected token ,")}else if(termination===Jsep.CBRACK_CODE){for(let arg=args.length;arg<separator_count;arg++){args.push(null)}}}}else if(args.length!==separator_count&&separator_count!==0){this.throwError("Expected comma")}else{const node=this.gobbleExpression();if(!node||node.type===Jsep.COMPOUND){this.throwError("Expected comma")}args.push(node)}}if(!closed){this.throwError("Expected "+String.fromCharCode(termination))}return args}gobbleGroup(){this.index++;let nodes=this.gobbleExpressions(Jsep.CPAREN_CODE);if(this.code===Jsep.CPAREN_CODE){this.index++;if(nodes.length===1){return nodes[0]}else if(!nodes.length){return false}else{return{type:Jsep.SEQUENCE_EXP,expressions:nodes}}}else{this.throwError("Unclosed (")}}gobbleArray(){this.index++;return{type:Jsep.ARRAY_EXP,elements:this.gobbleArguments(Jsep.CBRACK_CODE)}}}const hooks=new Hooks;Object.assign(Jsep,{hooks:hooks,plugins:new Plugins(Jsep),COMPOUND:"Compound",SEQUENCE_EXP:"SequenceExpression",IDENTIFIER:"Identifier",MEMBER_EXP:"MemberExpression",LITERAL:"Literal",THIS_EXP:"ThisExpression",CALL_EXP:"CallExpression",UNARY_EXP:"UnaryExpression",BINARY_EXP:"BinaryExpression",ARRAY_EXP:"ArrayExpression",TAB_CODE:9,LF_CODE:10,CR_CODE:13,SPACE_CODE:32,PERIOD_CODE:46,COMMA_CODE:44,SQUOTE_CODE:39,DQUOTE_CODE:34,OPAREN_CODE:40,CPAREN_CODE:41,OBRACK_CODE:91,CBRACK_CODE:93,QUMARK_CODE:63,SEMCOL_CODE:59,COLON_CODE:58,unary_ops:{"-":1,"!":1,"~":1,"+":1},binary_ops:{"||":1,"&&":2,"|":3,"^":4,"&":5,"==":6,"!=":6,"===":6,"!==":6,"<":7,">":7,"<=":7,">=":7,"<<":8,">>":8,">>>":8,"+":9,"-":9,"*":10,"/":10,"%":10},right_associative:new Set,additional_identifier_chars:new Set(["$","_"]),literals:{true:true,false:false,null:null},this_str:"this"});Jsep.max_unop_len=Jsep.getMaxKeyLen(Jsep.unary_ops);Jsep.max_binop_len=Jsep.getMaxKeyLen(Jsep.binary_ops);const jsep=expr=>new Jsep(expr).parse();const staticMethods=Object.getOwnPropertyNames(Jsep);staticMethods.forEach(m=>{if(jsep[m]===undefined&&m!=="prototype"){jsep[m]=Jsep[m]}});jsep.Jsep=Jsep;const CONDITIONAL_EXP="ConditionalExpression";var ternary={name:"ternary",init(jsep){jsep.hooks.add("after-expression",function gobbleTernary(env){if(env.node&&this.code===jsep.QUMARK_CODE){this.index++;const test=env.node;const consequent=this.gobbleExpression();if(!consequent){this.throwError("Expected expression")}this.gobbleSpaces();if(this.code===jsep.COLON_CODE){this.index++;const alternate=this.gobbleExpression();if(!alternate){this.throwError("Expected expression")}env.node={type:CONDITIONAL_EXP,test:test,consequent:consequent,alternate:alternate}}else if(test.operator===":"){if(!consequent.right){this.throwError("Expected :")}const node=findLastBinaryNode(consequent);test.right={type:CONDITIONAL_EXP,test:test.right,consequent:node.left,alternate:node===consequent?node.right:{operator:":",left:node.right,right:consequent.right}};env.node=test}else if(consequent.operator===":"){convertBinaryToConditional(findLastBinaryNode(consequent),test);env.node=consequent}else if(consequent.alternate){let alternate=consequent.alternate;while(alternate.alternate){alternate=alternate.alternate}env.node={type:CONDITIONAL_EXP,test:test,consequent:consequent,alternate:alternate.right};delete alternate.operator;delete alternate.right;Object.assign(alternate,alternate.left)}else{this.throwError("Expected :")}if(env.node.test&&env.node.test.operator&&jsep.binary_ops[env.node.test.operator]<.95){const node=env.node;env.node=node.test;env.node.right={type:CONDITIONAL_EXP,test:node.test.right,consequent:node.consequent,alternate:node.alternate}}}});function findLastBinaryNode(node){while(node.left&&node.left.operator===":"){node=node.left}return node}function convertBinaryToConditional(node,test){node.type=CONDITIONAL_EXP;node.test=test;node.consequent=node.left;node.alternate=node.right;delete node.operator;delete node.left;delete node.right}}};jsep.plugins.register(ternary);module.exports=jsep},{}],2:[function(require,module,exports){const LogLevel={DEBUG:0,INTERNAL:2,WARNING:3,ERROR:4,FATAL:5};let make_nicer_fsm=function(fsm,opts){let nodeMap={};var i;if(fsm.machine.nodes.length<2){opts.logger(LogLevel.FATAL,`Not enough nodes!`);return}for(i=0;i<fsm.machine.nodes.length;i++){var currNode=fsm.machine.nodes[i];if(nodeMap.hasOwnProperty(currNode.id)){opts.logger(LogLevel.ERROR,`Conflicting node ID ${currNode.id} between node ${nodeMap[currNode.id].name} and ${currNode.name}; skipping ${currNode.name}`);continue}nodeMap[currNode.id]=currNode;nodeMap[currNode.id].edges=[];nodeMap[currNode.id].targets=0}for(i=0;i<fsm.machine.edges.length;i++){var currEdge=fsm.machine.edges[i];if(!nodeMap.hasOwnProperty(currEdge.start)){opts.logger(LogLevel.ERROR,`Edge #${i} has unknown start node ${currEdge.start}; skipping edge`);continue}if(!nodeMap.hasOwnProperty(currEdge.end)){opts.logger(LogLevel.ERROR,`Edge #${i} has unknown end node ${currEdge.end}; skipping edge`);continue}nodeMap[currEdge.start].edges.push(currEdge);nodeMap[currEdge.end].targets+=1}var nodeArr=Object.values(nodeMap);for(i=0;i<nodeArr.length;i++){if(nodeArr[i].targets==0){opts.logger(LogLevel.WARNING,`Node ID ${nodeArr[i].id} has no edges going to it`)}}if(!fsm.meta.hasOwnProperty("reset")){opts.logger(LogLevel.FATAL,`No reset state specified!`);return}if(!nodeMap.hasOwnProperty(fsm.meta.reset)){opts.logger(LogLevel.FATAL,`Invalid reset state ID #${fsm.meta.reset} specified!`);return}for(i=0;i<nodeArr.length;i++){var transitionConditions=nodeArr[i].edges.map(x=>x.condition);var numUnconditionalTransitions=transitionConditions.reduce((prev,curr)=>{prev+(curr?1:0)},0);if(numUnconditionalTransitions>1){opts.logger(LogLevel.ERROR,`Node ID ${nodeArr[i].id} has multiple unconditional transitions going out of it!`)}}return nodeMap};let make_nicer_signals=function(fsm,opts){let signalMap={};var i=0;for(i=0;i<fsm.meta.signals.output.length;i++){var currSignal=fsm.meta.signals.output[i];signalMap[currSignal.name]=currSignal;if(!currSignal.hasOwnProperty("default")){if(currSignal.inverted){signalMap[currSignal.name].default="1'b1"}else{signalMap[currSignal.name].default=`${currSignal.width}'${currSignal.width==1?"b":"d"}0`}}if(currSignal.width==1){if(currSignal.inverted){signalMap[currSignal.name].asserted=`1'b0`}else{signalMap[currSignal.name].asserted=`1'b1`}}}for(i=0;i<fsm.machine.edges.length;i++){for(var j=0;j<fsm.machine.edges[i].output.length;j++){var checkStr=fsm.machine.edges[i].output[j].split("=");if(checkStr.length==2){checkStr=checkStr[0].split(" ").join("")}else if(checkStr.length==1){checkStr=checkStr[0]}else{opts.logger(LogLevel.ERROR,`Bad output \`${fsm.machine.edges[i].output[j]}\` in edge #${i} output #${j}`);return}if(!signalMap.hasOwnProperty(checkStr)){opts.logger(LogLevel.WARNING,`Edge #${i} output #${j} is not a valid output!`)}}}return signalMap};exports.convert=function(fsm,opts){let output=[];let currIndent=0;let niceFsm;let niceSignals;if(fsm.version!=2){opts.logger(LogLevel.FATAL,`Expected version 2, not ${fsm.version}`);return}niceFsm=make_nicer_fsm(fsm,opts);if(!niceFsm)return;niceSignals=make_nicer_signals(fsm,opts);if(!niceSignals)return;let sawZero=false;let lastSawOneIdx=0;let emit_line=function(indentAdjust,line){if(indentAdjust<0){currIndent+=indentAdjust;if(!sawZero){opts.logger(LogLevel.DEBUG,`Slicing out lines ${lastSawOneIdx} to ${output.length}`);output=output.slice(0,lastSawOneIdx-1);lastSawOneIdx=output.length;sawZero=true;return}}output.push(`${opts.style.indent.repeat(currIndent)}${line}`);if(indentAdjust==0){sawZero=true}if(indentAdjust>0){currIndent+=indentAdjust;sawZero=false;lastSawOneIdx=output.length}};let gen_file_header=function(){emit_line(0,"`default_nettype none");emit_line(0,"")};let gen_module_header=function(){var i=0,signalInQuestion,extra;emit_line(1,`module ${fsm.meta.name} (`);emit_line(0,`input logic ${opts.clock.name}, ${opts.reset.name},`);for(i=0;i<fsm.meta.signals.input.length;i++){signalInQuestion=fsm.meta.signals.input[i];extra=signalInQuestion.width>1?` [${signalInQuestion.width-1}:0]`:``;emit_line(0,`input logic${extra} ${signalInQuestion.name},`)}for(i=0;i<fsm.meta.signals.output.length;i++){signalInQuestion=fsm.meta.signals.output[i];extra=signalInQuestion.width>1?` [${signalInQuestion.width-1}:0]`:``;emit_line(0,`output logic${extra} ${signalInQuestion.name}${i==fsm.meta.signals.output.length-1?``:`,`}`)}emit_line(0,`);`);emit_line(0,``)};let gen_enum=function(){var i=0;let enumWidth=Math.ceil(Math.log2(fsm.machine.nodes.length));emit_line(1,`enum logic [${enumWidth-1}:0] {`);for(i=0;i<fsm.machine.nodes.length;i++){emit_line(0,`${fsm.machine.nodes[i].name}${i==fsm.machine.nodes.length-1?``:`,`}`)}emit_line(-1,`} ${opts.cstate}, ${opts.nstate};`)};let gen_comb_preamble=function(){var i=0;emit_line(1,`always_comb begin`);emit_line(0,`${opts.nstate} = ${opts.cstate};`);for(i=0;i<fsm.meta.signals.output.length;i++){var currSignal=fsm.meta.signals.output[i];emit_line(0,`${currSignal.name} = ${niceSignals[currSignal.name].default};`)}emit_line(0,``)};let format_single_output=function(outputSignal,value){if(value){let val_str=isNaN(parseInt(value))?value:`${niceSignals[outputSignal].width}'d${value}`;emit_line(0,`${outputSignal} = ${val_str};`)}else{if(niceSignals.hasOwnProperty(outputSignal))emit_line(0,`${outputSignal} = ${niceSignals[outputSignal].asserted};`);else{opts.logger(LogLevel.ERROR,`Unknown signal name ${outputSignal}`)}}};let format_outputs=function(outputsArr){for(var i=0;i<outputsArr.length;i++){var checkStr=outputsArr[i].split("=");if(checkStr.length==2){format_single_output(checkStr[0].split(" ").join(""),checkStr[1].split(" ").join(""))}else{format_single_output(checkStr[0])}}};let gen_case_item=function(state){emit_line(1,`${state.name}: begin`);for(var i=0;i<state.edges.length;i++){var currEdge=state.edges[i];if(currEdge.condition){emit_line(1,`if (${currEdge.condition}) begin`)}format_outputs(currEdge.output);if(currEdge.end!=state.id&&opts.style.skipOutputTransitionToSameState)emit_line(0,`${opts.nstate} = ${niceFsm[currEdge.end].name};`);if(currEdge.condition){emit_line(-1,`end`)}}emit_line(-1,`end`)};let gen_case=function(){emit_line(1,`case (${opts.cstate})`);for(var i=0;i<fsm.machine.nodes.length;i++){gen_case_item(fsm.machine.nodes[i])}emit_line(-1,`endcase`)};let gen_comb_epilogue=function(){emit_line(-1,`end`)};let gen_ff=function(reset_state_name){emit_line(1,`always_ff @(${opts.clock.edge} ${opts.clock.name}, ${opts.reset.edge} ${opts.reset.name}) begin`);let resetLine=`if (`;resetLine+=opts.reset.edge=="negedge"?`!${opts.reset.name}`:`${opts.reset.name}`;resetLine+=`) ${opts.cstate} <= ${reset_state_name};`;emit_line(0,resetLine);emit_line(0,`else ${opts.cstate} <= ${opts.nstate};`);emit_line(-1,`end`)};let gen_module_footer=function(){emit_line(0,``);emit_line(-1,`endmodule : ${fsm.meta.name}`)};emit_line(0,`// Automatically generated by ferris highroller on ${(new Date).toLocaleString()}`);if(opts.outputType=="file")gen_file_header();if(opts.outputType!="code")gen_module_header();gen_enum();emit_line(0,``);gen_comb_preamble();gen_case();gen_comb_epilogue();gen_ff(niceFsm[fsm.meta.reset].name);if(opts.outputType!="code")gen_module_footer();if(currIndent)opts.logger(LogLevel.INTERNAL,"Indentation was non-zero at fin. Output might look weird, or there was a bad error when converting.");return output.join("\n")}},{}],3:[function(require,module,exports){exports.convert=require("./convert").convert;const validate=require("./validate");exports.parseEdge=validate.parseEdge},{"./convert":2,"./validate":4}],4:[function(require,module,exports){const jsep=require("jsep");exports.validate=function(fsm,opts){};exports.parseEdge=function(edgeStr){return jsep(edgeStr)}},{jsep:1}],5:[function(require,module,exports){window.highroller=require("highroller")},{highroller:3}]},{},[5]);
